#include "Renderer2D.hh"

#include "../Scene/AssetsManager.hh"
#include "../Core/Clock.hh"

namespace rym
{
	using namespace api;

	static Polygons* s_PolygonsBatching;
	static WirePolygons* s_WirePolygonsBatching;
	//static TextRenderer* s_TextRendererBathcing;

	Renderer2D::Renderer2DData Renderer2D::m_Data;

	constexpr auto PIVOT_IMAGE_BASE_64 =
		"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";

	constexpr auto CAMERA_IMAGE_BASE_64 =
		"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";

	// Antonio-Bold
	constexpr auto DEFAULT_FONT_BASE_64 =
		"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"
		"v+9gEf6LORA7ADMP31Agv8e/ylAh394wABABEAAANdBuAACQAAYREBIRMzEzMBEQE4/tkBAK4Em//+5wK/BCH9bgKS+9/9Qf//ABEAAANdCQkGJgBxAAAABwGfAPABBP//ABEA"
		"AANdCL0GJgBxAAAABwGiADEBBP//ABEAAANdCE4GJgBxAAAABwGcAAYBBP//ABEAAANdCQkGJgBxAAAABwGeALMBBAABAD8AAALFBuAACQAAczUBITUhFQEhFT8Bbf60AmX+kwFl7gUL59n64OcA//8APwAAAsUJCQYmAHYAAAAHAZ8ArwEE//8AIgAAAskIvgYmAHYAAAAHAaP/8AEE//8APwAAAsUIUAYmAHYAAAAHAZ0AvgEE//8A"
		"hAAABrkIvgQmABMAAAAnAHYD8AAAAAcBowPgAQT//wCEAAAGsQe6BCYAEwAAACcBKAPwAAAABwGjA9gAAP//AIT/7AYZBuAEJgA5AAAABwA1AvAAAP//AIT/OwShB0wEJgA5AAAAJwDMAvAAAAAHAZ0DYgAA//8AhP/sB1YG4AQmAEAAAAAHADUELQAA//8AhP87Bd4HTAQmAEAAAAAnAMwELQAAAAcBnQSfAAD//wCEAAAGtQbgBCYA"
		"EwAAAAcAdgPwAAD//wCEAAAGkAbgBCYAEwAAAAcBKAPwAAD//wBu/+4DcAkJBiYAIgAAAAcBnwEtAQT//wAXAAADhAk9BiYAAQAAAAcBqP/lAQT//wAcAAADhAiFBiYAAQAAAAcBqQB6AQT////1AAAC3gk9BiYAFwAAAAcBqP/DAQT//wCEAAAC3giFBiYAFwAAAAcBqQBYAQT///9hAAACMgk9BiYAKgAAAAcBqP8vAQT////1AAAC"
		"KwiFBiYAKgAAAAcBqf/EAQT//wBF/+wDeAk9BiYARQAAAAcBqAATAQT//wBu/+wDeAiFBiYARQAAAAcBqQCoAQT//wBBAAADiQk9BiYAUwAAAAcBqAAPAQT//wCEAAADiQiFBiYAUwAAAAcBqQCkAQT//wBM/+wDfwk9BiYAXwAAAAcBqAAaAQT//wB3/+wDfwiFBiYAXwAAAAcBqQCvAQT//wAS/U8CsQbgBiYAXQAAAAcBqwCnAAD/"
		"/wCEAAADjQhQBiYADAAAAAcBnQE0AQT//wCEAAADgQhQBiYAEwAAAAcBnQEiAQT//wCEAAAC4AhQBiYAIQAAAAcBnQDyAQT//wCEAAAFBQhQBiYAPwAAAAcBnQINAQT//wCEAAADfghQBiYAUAAAAAcBnQEgAQT//wBJ/+wDMwhQBiYAVwAAAAcBnQD+AQT//wASAAACsQhQBiYAXQAAAAcBnQCqAQQAAgBl//EDWAXuACUAMgAARSIm"
		"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QAQgPeAGQD3gBkA94AZAPeAGQD3gBkA/wAhwP8AC4D/P+7AhkAhwIZAIgCGQB4Ahn/8wIZ/7kCGf+OAhkAOwRFAIcCGf/3Ahn/9AIZ/74CLAA8AiwAPAIs/9YDwQCHA8EAhwOpAIQCEwCEAhMAdQLoAIQCEwCBAtsAhAKAADEF4ACDA/wAgwP8AIMD/ACDA/wAgwP8AIMDygBuA8oAbgPKAG4DygBuA8oAZgPKAG4DygBuA8oAbgNvAG4DygBuBasAbgPmAIQD6ACFA+IAbgK5AIQCuQCEArkAHQK5AIQDXgBQA14AUANeAFADXgBQA14AUANeAFAECACHAn4ALAOFACwD8gB6A/IAegPyAHoD8gB6A/IAegPyAHoD8gB6A/IAegbCAG4EPwCEBigAgwbCAG4D3gBkA8oANgPKAGUDsQAqA7EAbgIZ/14CGf/yA8oANgPKAG4Cuf/CArkAVgPyAEoD8gB6An4ALAPmAIcD5gBuApQAQgXgAIMD5gCEA14AUAJ+ACwD8gB6A/IAegPyAHoDVAAvBOoAMQTqADEE6gAxBOoAMQTqADEDSAAbA1sAKwNbACsDWwArA1sAKwNbACsC3ABJAtwASQLcABoC3ABJBPoAOQcQADkHEAA5BJMAOQSTADkDnwCmA4wAnwOZACID/gB6A/IAZwKkACgDtwCNA8AAaQO3AFoDtwB6A7cAZgO3AGgDtwBfA7cAQwJ0AEwDPwC2A1gAngNUAJYDPQA5BlQAWgX/AFoGEwBTAW8AAAFvAAACFACVAegAdQIrAIgCMQCEBKQAlQICAHMCDQCEA4EAeAQUAKEB4ACEA10ApQPAAFsFCACMAzoAVgNkAGACuABZArgAWgL0AHgEgQA8AuwAMAJrAIECawBWAx4AhQMeAIUC/ACzAvwAhwHkAFAD+ACXBAYAjAQ1AJsCSgB3AkoAgQUYAFgFGA"
		"CXAl4AOQLXAIsDsACqAacAZAL/AGsF3gBuBBwASQRfAG0DtgBwBboATAXeAF4GjABSA5MAaAIZAJYCEgB6A40AWwONAFsD5wA1AxQAbgSHAH0DhgBQBDUAUgNiABEDKABeAn0APALGACwDJABeAtIAaAN0AGcC2gBaAtoAQQMNAGsDDQBSA1YAdgRdAGkEXQBkA7MAYQQGAHIFFABsAv8AcwQJAIgDLgByBPMAYwQwAKMD8gB6CKEAggwjAIIDPQA5A5kAIgAAADIAAAAyAAAAMgAAADIAAAAyAAAAUAAAADIAAAAyAAAAMgAAADIAAAAyAAAAMgAAADIAAAAxAAAAMgAAADIAAAAyAAAAMgAAADIDYgAyAcsAMgHLADIDCwAyArgARgI2ADIDAQAyApAAMgIYADIAAQAACT3+4wAAC+L/e/0EC0YAAQAAAAAAAAAAAAAAAAAAAbgABAN3ArwABQAABTMEzQAAAJoFMwTNAAACzQAAA4QAAAAAAAAAAAAAAACgAADvAAAgSwAAAAAAAAAAbmV3dACgACAlygk9/uMAAAk9ArEgAACTAAAAAAXcBuAAAAAgAAMAAAACAAAAAwAAABQAAwABAAAAFAAEBOIAAAByAEAABQAyAC8AOQB+AUgBYQFlAX4BkgHMAfUCGwI3AsYCyQLaAtwDBAMIAwwDDwMSAygDNQOUA7weAx4LHh8eQR5XHmEeax6FHvMgFCAaIB4gIiAmIDAgOiBEIHQgrCEiIgIiDyISIhUiGiIeIisiSCJgImUlyv//AAAAIAAwADoAoAFMAWQBaAGSAcQB8QIAAjcCxgLJAtoC3AMAAwYDCgMPAxEDJgM1A5QDvB4CHgoeHh5AHlYeYB5qHoAe8iATIBggHCAgICYgMCA5IEQgdCCsISIiAiIPIhEiFSIaIh4iKyJIImAiZCXK//8AAAEFAAAAAAAAAAAAAP/dAAAAAAAA/pX+7P7q/tr+2QAAAAAAAP6Z/pj+hf55/Z/9eAAAAAAAAAAAAAAAAAAAAAAAAOFHAAAAAAAA4SfhaeEy4P/gzuDQ4FTflN+EAADfhd9733PfZ99F3ycAANvRAAEAcgAAAI4BFgJmApACkgAAArwCzALUAAAAAAAAAAAAAAMAAwgDDAAAAAAAAAAAAAAAAAMEAwYDCAMKAwwDDgMQAxIDHAAAAxwDIAMkAAAAAAAAAAAAAAAAAAAAAAAAAxYAAAAAAAAAAAAAAAADDAAAAAABRwFOAW0BVQF/AZgBcQFuAV0BXgFUAYIBSgFYAUkBVgFLAUwBiQGGAYgBUAFwAAEADAANABMAFwAhACIAJwAqADUANwA5AD8AQABFAFAAUgBTAFcAXQBfAGoAawBwAHEAdgFhAVcBYgGQAVwBsACXAKIAowCpAK0AtwC4AL0AwADLAM4A0QDXANgA3QDoAOoA6wDvAPYA+AEcAR0BIgEjASgBXwF4AWABjgFIAU8BfQGAAX4BgQF5AXMBrwF0ATEBaQGPAVkBdQG2AXcBjAFAAUEBsQGXAXIBUgG3AT8BMgFqAUUBRAFGAVEABgACAAQACgAFAAkACwAQAB4AGAAbABwAMQAsAC4ALwAUAEQASgBGAEgATgBJAYQATQBkAGAAYgBjAHIAUQD1AJwAmACaAKAAmwCfAKEApgC0AK4AsQCyAMYAwgDEAMUAqgDcAOIA3gDgAOYA4QGFAOUA/QD5APsA/AEkAOkBJgAHAJ0AAwCZAAgAngAOAKQAEQCnABIAqAAPAKUAFQCrABYArAAfALUAGQCvAB0AswAgALYAGgCwACQAugAjALkAJgC8ACUAuwApAL8AKAC+ADQAygAyAMgALQDDADMAyQAwAMEAKwDHADYAzQA4AM8A0AA6ANIAPADUADsA0wA9ANUAPgDWAEEA2QBDANsAQgDaAEwA5ABHAN8ASwDjAE8A5wBUAOwAVgDuAFUA7QBYAPAAWwDzAFoA8gBZAPEAXgD3AGkBGwBmAP8AYQD6AGgBGgBlAP4AZwEZAG0BHwBzASUAdAB3ASkAeQErAHgBKgB6AHsBAAB8AH0BAQB+AH8BAgCAAIEBAwCCAQQAgwEFAIQBBgCFAQcAhgEIAIcBCQCIAQoAiQELAIoBDACLAQ0AjAEOAI0BDwCOARAAXAD0AI8BEQGeAZ8BogGmAacBpAGdAZwBpQGgAaMAkAESAJEBEwCSARQAkwEVAJQBFgCVARcAlgEYAG8BIQBsAR4AbgEgAHUBJwFnAWgBYwFlAWYBZAF6AXsBUwGUAYMBiwGKAAC4Af+FsASNAAAAABEA0gADAAEECQAAAK4AAAADAAEECQABAA4ArgADAAEECQACAAgAvAADAAEECQADAC4AxAADAAEECQAEABgA8gADAAEECQAFABoBCgADAAEECQAGABgBJAADAAEECQAHAEwBPAADAAEECQAIABgBiAADAAEECQAJABgBiAADAAEECQALADQBoAADAAEECQAMADQBoAADAAEECQANASAB1AADAAEECQAOADQC9AADAAEECQAZAA4ArgADAAEECQEAAAwDKAADAAEECQEFAAgAvABDAG8AcAB5AHIAaQBnAGgAdAAgADIAMAAxADMAIABUAGgAZQAgAEEAbgB0AG8AbgBpAG8AIABQAHIAbwBqAGUAYwB0ACAAQQB1AHQAaABvAHIAcwAgACgAaAB0AHQAcABzADoALwAvAGcAaQB0AGgAdQBiAC4AYwBvAG0ALwBnAG8AbwBnAGwAZQBmAG8AbgB0AHMALwBhAG4AdABvAG4AaQBvAEYAbwBuAHQAKQBBAG4AdABvAG4AaQBvAEIAbwBsAGQAMQAuADAAMAAyADsAbgBlAHcAdAA7AEEAbgB0AG8AbgBpAG8ALQBCAG8AbABkAEEAbgB0AG8AbgBpAG8AIABCAG8AbABkAFYAZQByAHMAaQBvAG4AIAAxAC4AMAAwADIAQQBuAHQAbwBuAGkAbwAtAEIAbwBsAGQAQQBuAHQAbwBuAGkAbwAgAGkAcwAgAGEAIAB0AHIAYQBkAGUAbQBhAHIAawAgAG8AZgAgAFYAZQByAG4AbwBuACAAQQBkAGEAbQBzAFYAZQByAG4A"
		"bwBuACAAQQBkAGEAbQBzAGgAdAB0AHAAOgAvAC8AbgBlAHcAdAB5AHAAbwBnAHIAYQBwAGgAeQAuAGMAbwAuAHUAawBUAGgAaQBzACAARgBvAG4AdAAgAFMAbwBmAHQAdwBhAHIAZQAgAGkAcwAgAGwAaQBjAGUAbgBzAGUAZAAgAHUAbgBkAGUAcgAgAHQAaABlACAAUwBJAEwAIABPAHAAZQBuACAARgBvAG4AdAAgAEwAaQBjAGUAbgBzAGUALAAgAFYAZQByAHMAaQBvAG4AIAAxAC4AMQAuACAAVABoAGkAcwAgAGwAaQBjAGUAbgBzAGUAIABpAHMAIABhAHYAYQBpAGwAYQBiAGwAZQAgAHcAaQB0AGgAIABhACAARgBBAFEAIABhAHQAOgAgAGgAdAB0AHAAOgAvAC8AcwBjAHIAaQBwAHQAcwAuAHMAaQBsAC4AbwByAGcALwBPAEYATABoAHQAdABwADoALwAvAHMAYwByAGkAcAB0AHMALgBzAGkAbAAuAG8AcgBnAC8ATwBGAEwAVwBlAGkAZwBoAHQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbgAAAAkAMkBAgDHAGIArQEDAQQAYwCuAJAAJQAmAP0A/wBkAQUBBgAnAOkBBwEIACgAZQEJAQoAyADKAQsAywEMAQ0AKQAqAPgBDgEPARAAKwERARIALAETAMwBFADNAM4A+gDPARUBFgEXAC0BGAAuARkALwEaARsBHAEdAOIAMAAxAR4BHwEgAGYAMgDQASEA0QBnANMBIgEjAJEArwCwADMA7QA0ADUBJAElASYANgEnAOQA+wEoASkANwEqADgA1AErANUAaADWASwBLQEuAS8BMAA5ADoBMQEyATMBNAA7ADwA6wE1ALsBNgA9ATcA5gE4ATkBOgE7ATwBPQE+AT8BQAFBAUIBQwFEAUUBRgFHAUgBSQFKAUsBTAFNAU4BTwFQAVEBUgFTAVQBVQBEAGkBVgBrAGwAagFXAVgAbgBtAKAARQBGAP4BAABvAVkBWgBHAOoBWwEBAEgAcAFcAV0AcgBzAV4AcQFfAWAASQBKAPkBYQFiAWMASwFkAWUATADXAHQBZgB2AHcAdQFnAWgBaQFqAE0BawFsAE4BbQFuAE8BbwFwAXEBcgDjAFAAUQFzAXQBdQB4AFIAeQF2AHsAfAB6AXcBeAChAH0AsQBTAO4AVABVAXkBegF7AFYBfADlAPwBfQF+AIkAVwF/AFgAfgGAAIAAgQB/AYEBggGDAYQBhQGGAYcBiAGJAYoBiwGMAY0BjgGPAZABkQGSAZMBlAGVAZYBlwGYAZkBmgGbAZwBnQGeAFkAWgGfAaABoQGiAFsAXADsAaMAugGkAF0BpQDnAaYBpwGoAakBqgGrAJ0AngGsAa0AEwAUABUAFgAXABgAGQAaABsAHAGuAa8BsAGxALwA9AD1APYAAwGyABEADwAdAB4BswAEAKMAIgCiAMMAhwANAAYAEgA/ABABtACyALMAQgALAAwAXgBgAD4AQADEAMUAtAC1ALYAtwCpAKoAvgC/AAUACgCmACMACQCIAIYAiwCKAIwAgwBfAOgAggDCAbUAhAC9AAcAhQCWAA4A7wDwALgAIACPACEAHwCVAJQAkwCnAGEApABBAJIAnACaAJkApQCYAbYACADGAbcAuQG4AbkBugG7AbwBvQG+Ab8BwAHBAcIBwwHEAcUBxgHHAcgByQHKAcsBzAHNAc4BzwHQAdEB0gHTBkFicmV2ZQdBbWFjcm9uB0FvZ29uZWsLQ2NpcmN1bWZsZXgKQ2RvdGFjY2VudAZEY2Fyb24GRGNyb2F0BkVicmV2ZQZFY2Fyb24KRWRvdGFjY2VudAdFbWFjcm9uB0VvZ29uZWsLR2NpcmN1bWZsZXgHdW5pMDEyMgpHZG90YWNjZW50BEhiYXILSGNpcmN1bWZsZXgCSUoGSWJyZXZlB0ltYWNyb24HSW9nb25lawZJdGlsZGULSmNpcmN1bWZsZXgHdW5pMDEzNgZMYWN1dGUGTGNhcm9uB3VuaTAxM0IETGRvdAZOYWN1dGUGTmNhcm9uB3VuaTAxNDUGT2JyZXZlDU9odW5nYXJ1bWxhdXQHT21hY3JvbgZSYWN1dGUGUmNhcm9uB3VuaTAxNTYGU2FjdXRlC1NjaXJjdW1mbGV4B3VuaTAyMTgGVGNhcm9uBlVicmV2ZQ1VaHVuZ2FydW1sYXV0B1VtYWNyb24HVW9nb25lawVVcmluZwZVdGlsZGUGV2FjdXRlC1djaXJjdW1mbGV4CVdkaWVyZXNpcwZXZ3JhdmULWWNpcmN1bWZsZXgGWWdyYXZlBlphY3V0ZQpaZG90YWNjZW50B3VuaTAxQzQHdW5pMDFDNQd1bmkwMUM3B3VuaTAxQzgHdW5pMDFDQQd1bmkwMUNCB3VuaTAxRjEHdW5pMDFGMgd1bmkwMUY0B3VuaTAyMDAHdW5pMDIwMgd1bmkwMjA0B3VuaTAyMDYHdW5pMDIwOAd1bmkwMjBBB3VuaTAyMEMHdW5pMDIwRQd1bmkwMjEwB3VuaTAyMTIHdW5pMDIxNAd1bmkwMjE2B3VuaTAyMUEHdW5pMUUwMgd1bmkxRTBBB3VuaTFFMUUHdW5pMUU0MAd1bmkxRTU2B3VuaTFFNjAHdW5pMUU2QQZhYnJldmUHYW1hY3Jvbgdhb2dvbmVrC2NjaXJjdW1mbGV4CmNkb3RhY2NlbnQGZGNhcm9uBmVicmV2ZQZlY2Fyb24KZWRvdGFjY2VudAdlbWFjcm9uB2VvZ29uZWsLZ2NpcmN1bWZsZXgHdW5pMDEyMwpnZG90YWNjZW50BGhiYXILaGNpcmN1bWZsZXgGaWJyZXZlAmlqB2ltYWNyb24HaW9nb25lawZpdGlsZGUHdW5pMDIzNwtqY2lyY3VtZmxleAd1bmkwMTM3DGtncmVlbmxhbmRpYwZsYWN1dGUGbGNhcm9uB3VuaTAxM0MEbGRvdAZuYWN1dGUGbmNhcm9uB3VuaTAxNDYGb2JyZXZlDW9odW5nYXJ1bWxhdXQHb21hY3JvbgZyYWN1dGUGcmNhcm"
		"9uB3VuaTAxNTcGc2FjdXRlC3NjaXJjdW1mbGV4B3VuaTAyMTkGdGNhcm9uBnVicmV2ZQ11aHVuZ2FydW1sYXV0B3VtYWNyb24HdW5pMDFDNgd1bmkwMUM5B3VuaTAxQ0MHdW5pMDFGMwd1bmkwMUY1B3VuaTAyMDEHdW5pMDIwMwd1bmkwMjA1B3VuaTAyMDcHdW5pMDIwOQd1bmkwMjBCB3VuaTAyMEQHdW5pMDIwRgd1bmkwMjExB3VuaTAyMTMHdW5pMDIxNQd1bmkwMjE3B3VuaTAyMUIHdW5pMUUwMwd1bmkxRTBCB3VuaTFFMUYHdW5pMUU0MQd1bmkxRTU3B3VuaTFFNjEHdW5pMUU2Qgd1b2dvbmVrBXVyaW5nBnV0aWxkZQZ3YWN1dGULd2NpcmN1bWZsZXgJd2RpZXJlc2lzBndncmF2ZQt5Y2lyY3VtZmxleAZ5Z3JhdmUGemFjdXRlCnpkb3RhY2NlbnQDZl9mBWZfZl9pBWZfZl9sA2ZfaQNmX2wHdW5pMDM5NAd1bmkwM0JDB3VuaTAwQjkHdW5pMDBCMgd1bmkwMEIzB3VuaTIwNzQHdW5pMDBBMAd1bmkyMDI2B3VuaTAwQUQERXVybwd1bmkwMEI1B3VuaTIyMTUHdW5pMDMwOAd1bmkwMzA3CWdyYXZlY29tYglhY3V0ZWNvbWIHdW5pMDMwQgt1bmkwMzBDLmFsdAd1bmkwMzAyB3VuaTAzMEMHdW5pMDMwNgd1bmkwMzBBCXRpbGRlY29tYgd1bmkwMzA0B3VuaTAzMEYHdW5pMDMxMQd1bmkwMzEyB3VuaTAzMjYHdW5pMDMyNwd1bmkwMzI4B3VuaTAzMzUHdW5pMDBBOAd1bmkwMDYwB3VuaTAwQjQHdW5pMDJDNgd1bmkwMkM5B3VuaTAyREEHdW5pMDJEQwd1bmkwMEFGB3VuaTAwQjgAAAAAAQAB//8ADwABAAIADgAAAAAAAAA8AAIABwAAAKkAAQCrASsAAQF8AX0AAQF/AX8AAQGBAYEAAQGcAaAAAwGiAa4AAwABAAIAAAAMAAAAFAABAAIBqwGsAAIAAgGcAaAAAAGiAaoABQABAAAACgAoAFAAAkRGTFQADmxhdG4ADgAEAAAAAP//AAMAAAABAAIAA2tlcm4AFG1hcmsAGm1rbWsAIAAAAAEAAAAAAAEAAQAAAAIAAgADAAQACggqGXIZuAACAAgAAgAKAmoAAQByAAQAAAA0AXYBdgF2AXYBdgF2AXYBdgF2AXYA3gEyATIA8AEyATgBfAF8AXYBdgF8AXwBiAGCAYgBjgGOAY4BjgGOAY4BlAGUAZQBlAGUAZoCQgG8AjwB5gHsAiYCPAJCAkICVAJUAlQCVAJUAloAAQA0AAEAAgADAAQABQAGAAcACAAJAAoAKgA5ADoAOwA8AD4AXQBeAIMAhACPAJYAtwDRARQBHAEdAR4BHwEgASEBIwEkASUBJgEnATwBSQFKAUsBUgFUAVYBWAFjAWQBZQFmAWcBaAFtAYIABAFJAAABSgAAAWMAAAFkAAAAEABdAHgAXgB4AGoAbgBrAG4AbABuAG0AbgBuAG4AbwBuAHEAbgByAG4AcwBuAHQAbgB1AG4AjwB4AJYAeAFU/4gAAQFU/4gADwBd/7oAXv+6AGr/sABr/7AAbP+wAG3/sABu/7AAb/+wAHH/kgBy/5IAc/+SAHT/kgB1/5IAj/+6AJb/ugABAVT/ugABACcAAAABAVL/fgABAUr/ugABAUr/iAABAUr/pgAIAUn/OAFK/zgBS//YAVb/sAFY/8QBY/84AWT/OAGC/5wACgAhAAABHP+cAR3/nAEe/5wBH/+cASD/nAEh/5wBNv/OATz/sAFWAGQAAQDR/4gADgAB/7oAAv+6AAP/ugAE/7oABf+6AAb/ugAH/7oACP+6AAn/ugAK/7oANf9qADb/agCD/7oAhP+6AAUBSf9CAUr/QgFW/vwBY/9CAWT/QgABATz/xAAEACEAAAE2/84BPP+wAVYAZAABATn/pgABATz/nAACAwQABAAAA84EvAAVABIAAAAAAAAAAAAAAAAAAP/iAAD/zgAAAAD/zgAAAAAAAAAA/9gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/i/+IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/iAAAAAAAAAAAAAAAAAAAAAAAAAAD/4v/s/+L/2P+c/87/zgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/sAAD/2AAAAAD/zgAAAAAAAAAAAAAAAP/iAAAAAP/i/+wAAAAAAAAAAAAAAAAAAP+mAAD/uv/EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9qAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+IAAAAAAAAAAAAAAAAAAAAAAAA/9gAAAAAAAAAAAAAAAAAAP/YAAAAAAAAAAAAAP/OAAAAAP/Y/9gAAAAAAAAAAAAAAAAAAP+IAAD/nP+SAAAAAAAAAAAAAAAA/5wAAAAAAAAAAAAAAAAAAAAAAAD/BgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+mAAAAAAAAAAAAAAAA/+wAAAAAAAAAAP/E/+z/pv9gAAD/4gAAAAAAAAAAAAAAAP/OAAAAAP/O/84AAAAAAAAAAAAAAAAAAP/OAAD/xP+6AAAAAAAAAAD/4gAAAAAAAP+w/5z/kgAA/9j/xAAA/84AAAAAAAAAAAAAAAAAAAAA/+IAAAAAAAAAAAAAAAAAAP8aAAD/dP+wAAAAAP/OAAAAAP/OAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/sAAAAAP/i/+wAAAAAAAAAAAAAAAAAAP8uAAD/fv+cAAAAAP/sAAAAAP/2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP/iAAAAAP/sAAAAAAAAAAAAAAAAAAAAAP+6AAAAAAAAAAAAAP/Y/+IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAhAAEACgAAAA0AFgAKACEAIQAUACsAKwAV"
		"ADUAPAAWAEUATgAeAFAAUQAoAF0AdQAqAHwAfABDAH4AfgBEAIMAhABFAIkAigBHAI0AjwBJAJEAkgBMAJQAlABOAJYAoABPAKIAqABaAKsAqwBhAK0AtwBiANMA0wBtAN0A6QBuAOsA7gB7APcA9wB/AQUBCACAAQsBDgCEARIBEgCIARQBFACJARYBFgCKARwBIQCLASMBJwCRAUkBSgCWAWMBaACYAW0BbQCeAAIAJwABAAoAAwANABYAAQAhACEAEQArACsACAA1ADYACAA3ADgAEgA5ADwADABFAE4AAQBQAFEADwBdAF4ADQBfAGkAAgBqAG8ABQBwAHAAFABxAHUACQB8AHwACAB+AH4ACACDAIQAAwCJAIoAAQCNAI4AAgCPAI8ADQCRAJEAAQCSAJIAEQCUAJQADwCWAJYADQCXAKAABACrAKsAEAC3ALcAEwDTANMAEADrAO4ABgD3APcAEAEFAQYABAENAQ4ABgEUARQAEwEcASEABwEjAScACwFJAUoADgFjAWQADgFlAWgACgFtAW0ACgACACkAAQAKAAUACwALABAADQASAAIAIgAmAAIANQA2AA8ARQBPAAIAXQBeAAwAXwBpAAMAagBvAAcAcABwABEAcQB1AAkAggCCAAIAgwCEAAUAiQCKAAIAjQCOAAMAjwCPAAwAlgCWAAwAlwChAAQAowCpAAEAqwC2AAEAtwC3AAYAuAC8AAEA3QDnAAEA6gDqAAEA9gD3AA4BAAEAAAEBAwEEAAEBBQEGAAQBBwEIAAEBCwEMAAEBEQERAA4BEwETAAEBFAEUAAYBGAEYAA4BHAEhAAgBIwEnAAsBLAEwAAYBSQFKAA0BYwFkAA0BZQFoAAoBbQFtAAoABAAAAAEACAABAAwAHAAEAFYArAACAAIBnAGgAAABogGuAAUAAgAJAAAAeQAAAHwAfQB6AIIAqQB8AKsA/wCkAQEBAQD5AQQBKwD6AXwBfQEiAX8BfwEkAYEBgQElABIAABGQAAARlgAAEZwAABGiAAARqAAAEa4AABGuAAARzAAAEbQAABG6AAARwAAAEcYAABHMAAAR0gABERIAAREYAAIASgADAFAAAQFrAAAAAQFGBmwBJgkyCTgAAAAACVwL5AvqAAAJUAvkC+oAAAk+C+QL6gAACUQL5AvqAAAJSgvkC+oAAAlQC+QL6gAACVYL5AvqAAAJXAvkC+oAAAliC+QL6gAACWgL5AvqAAAJbgl0AAAAAAl6DHQAAAAACYwPPgAAAAAJgA8+AAAAAAmGDz4AAAAACYwJkgAAAAAJmA8+AAAAAAmeDz4AAAAACaoMgAAADIYJqgyAAAAMhgmkDIAAAAyGCaoMgAAADIYJ2gv8DAIAAAnOC/wMAgAACbAL/AwCAAAJtgv8DAIAAAm8C/wMAgAACcIL/AwCAAAJyAv8DAIAAAnOC/wMAgAACdQL/AwCAAAJ2gv8DAIAAAngDJIAAAAACugObAAAAAAKoA5sAAAAAAqmDmwAAAAACugJ5gAAAAAJ7A5sAAAAAAnyCf4AAAoECfIJ/gAACgQJ+An+AAAKBAouDBQMGgAAAAAAAAwaAAAKIgwUDBoAAAoKDBQMGgAAChAMFAwaAAAKFgwUDBoAAAocDBQMGgAACiIMFAwaAAAKKAwUDBoAAAouDBQMGgAACjQMFAwaAAAKOg8OAAAAAApADw4AAAAACkwKRgAAAAAKTApSAAAAAApqCnAAAAvMClgKcAAAC8wKXgpwAAALzApqCmQAAAvMCmoKcAAAC8wKagpwAAALzAp2DJ4AAAAACogKmgAAAAAKfAqaAAAAAAqCCpoAAAAACogKjgAAAAAKlAqaAAAAAAroDmwMLAwyC9IObAwsDDIKoA5sDCwMMgqmDmwMLAwyCqwObAwsDDIL0g5sDCwMMgwgDmwMLAwyCrIObAwsDDIKuAq+DCwMMgrEDmwMLAwyCsoK0AAAAAAK1gyqAAAAAArcCuIAAAAACugObAwsDDIK+gxEAAAAAAruDEQAAAAACvQMRAAAAAAK+gsAAAAAAAseDLYAAAAACwYMtgAAAAALDAy2AAAAAAseCxIAAAAACxgMtgAAAAALHgskAAAAAAxiDMIAAAzICyoMwgAADMgLTgxWDFwAAAtCDFYMXAAACzAMVgxcAAALNgxWDFwAAAs8DFYMXAAAC0IMVgxcAAAMSgxWDFwAAAtIDFYMXAAAC04MVgxcAAALVAxWDFwAAAtaDFYMXAAAC2ALZgAAAAALbAuEAAAAAAt+C4QAAAAAC3ILhAAAAAALeAuEAAAAAAt+C4QAAAAAC4oLkAAAAAAQiBCOAAAAAAuiEI4AAAAAC5YQjgAAAAALnBCOAAAAAAuiEI4AAAAAC6gLwAAAC8YLrgvAAAALxgu0C8AAAAvGC7oLwAAAC8YAAAAAAAALzAAAAAAAAAvMC9IObAAAAAAL2AvkC+oAAAveC+QL6gAAC/AL/AwCAAAL9gv8DAIAAAwIDBQMGgAADA4MFAwaAAAMIA5sDCwMMgwmDmwMLAwyDDgMRAAAAAAMPgxEAAAAAAxKDFYMXAAADFAMVgxcAAAMYgxoAAAMyAxuDHQAAAAADHoMgAAADIYMjAySAAAAAAyYDJ4AAAAADKQMqgAAAAAMsAy2AAAAAAy8DMIAAAzIDiQPPg78AAAOPA8+DvwAAA4qDz4O/AAADjAPPg78AAAONg8+DvwAAA48Dz4O/AAADkIPPg78AAAOJA8+DvwAAAzODz4O/AAADk4PPg78AAAM1AzaAAAAAAzgD6oAAAAAEHAQdgAAAAAM5hB2AAAAAAzsEHYAAAAAEHAM8gAAAAAM+BB2AAAAAAz+EHYAAAAADQoPqgAAD4YNBA+qAAAPhg0KD6oAAA+GDToPDg8UAAANLg8ODxQAAA0QDw4PFAAADRYPDg8UAAANHA8ODxQAAA0iDw4PFAAADSgPDg8UAAANLg8ODxQAAA00Dw4PFAAADToPDg8UAAANQA+SAAAAAA1GDvYAAAAADUwO9gAAAAANUg72AAAAAA1YDvYAAAAADV4O9gAAAAANZA4eAAANcA1kDh4AAA1wDWoOHgAADXANmg8mDywAAA"
		"12DyYPLAAADY4PJg8sAAANfA8mDywAAA2CDyYPLAAADYgPJg8sAAANjg8mDywAAAAAAAAPLAAADZQPJg8sAAANmg8mDywAAA2gDyYPLAAADaYNuAAAAAANrA24AAAAAA2yDbgAAAAADcQNvgAAAAANxA3KAAAAABBwEHYAAAAADdwN4gAADuoN0A3iAAAO6g3cDeIAAA7qDdwN1gAADuoN3A3iAAAO6g3oDe4AAA30DfoPngAAAAAODA4eAAAAAA4ADh4AAAAADgYOHgAAAAAODA4SAAAAAA4YDh4AAAAADiQPPg9ED0oOPA8+D0QPSg4qDz4PRA9KDjAPPg9ED0oONg8+D0QPSg48Dz4PRA9KDzIPPg9ED0oOQg8+D0QPSg5IDz4PRA9KDk4PPg9ED0oOVA5aAAAAAA5gD6oAAAAADmYObAAAAAAOcg54AAAAAA6KD1wAAAAADn4PXAAAAAAOhA9cAAAAAA6KDpAAAAAADq4PtgAAAAAOlg+2AAAAAA6cD7YAAAAADq4OogAAAAAOqA+2AAAAAA6uDrQAAAAADroOwAAAAAAPbg/CAAAPyA7GD8IAAA/ID84P4A/mAAAO3g/gD+YAAA7MD+AP5gAADtIP4A/mAAAO2A/gD+YAAA7eD+AP5gAAD2IP4A/mAAAO5A/gD+YAAAAAAAAAAA7qDvAO9gAAAAAPMg8+DvwAAA84Dz4O/AAADwIPDg8UAAAPCA8ODxQAAA8aDyYPLAAADyAPJg8sAAAPMg8+D0QPSg84Dz4PRA9KD1APXAAAAAAPVg9cAAAAAA9iD+AP5gAAD2gP4A/mAAAPbg90AAAPyA96D6oAAAAAD4APqgAAD4YPjA+SAAAAAA+YD54AAAAAD6QPqgAAAAAPsA+2AAAAAA+8D8IAAA/ID84P4A/mAAAP1A/gD+YAAA/aD+AP5gAAD+wP8gAAAAAP+BAQAAAAABAKEBAAAAAAD/4QEAAAAAAQBBAQAAAAABAKEBAAAAAAEBYQHAAAAAAQIhA6AAAAABA0EDoAAAAAECgQOgAAAAAQLhA6AAAAABA0EDoAAAAAEEAQWAAAEF4QRhBYAAAQXhBMEFgAABBeEFIQWAAAEF4QZBBqAAAAABBwEHYAAAAAEHwQggAAAAAQiBCOAAAAAAABAhQGHQABAhQAxAABAcYIgQABAcYIvQABAcYITgABAcYJCQABAcYIVAABAcYG4AABAcYJLAABAcYIawABAm8G4AABAm8AAAABAewG4AABAeUJCQABAeUIvgABAeUG4AABAeH9ggABAeUIvQABAeUIUAABAdoIvgABAdoG4AABAaQIgQABAaQIvgABAaQIvQABAaQITgABAaQIUAABAaQJCQABAaQIVAABAaQG4AABAaoG4AABAfT9TwABAfQIUAABAggG4AABAggIvQABAggAAAABAggDcAABARAIgQABARAIvQABARAITgABARAIUAABARAJCQABARAIVAABARAG4AABARAIawABAqsG4AABAqsIvQABAgkAAAABAgkG4AABAgn9TwABASgJCQABAs0G4AABAaD9TwABASgG4AABAaAAAAABAsUG4AABAhcJCQABAhcIvgABAhcG4AABAhf9TwABAhcIawABAhcAAAABAfQIgQABAfQIvQABAfQITgABAfQIVAABAcIG4AABAcIAAAABAfQIawABAmoG4AABAmoAAAABAdgG4AABAesG4AABAesAAAABAfQG4AABAfAJCQABAfAIvgABAfAG4AABAfD9TwABAbYJCQABAbYIvgABAbL9ggABAbYIvQABAbYG4AABAbb9TwABAWIIvgABAfsIgQABAfsIvQABAfsITgABAfsJCQABAfsIVAABAfsG4AABAfsJLAABAfsIawABAdEG4AABAdEAAAABAqgG4AABAqgIvQABAqgITgABAqgJCQABAqgAAAABAcEG4AABAcEAAAABAbcIvQABAbcITgABAbcJCQABAXYG4AABAXYJCQABAXYIvgABAXYIUAABAXYAAAABAXYDcAABAXgDcAABAfQJCQABAcYJPQABAcYIgwABAcYAAAABAwoAAAABAaQJPQABAaQIgwABAZAAAAABAmwAAAABARAJPQABARAIgwABARAAAAABAR4AAAABAfQJPQABAfQIgwABA4MACgABAfQDcAABAfAJPQABAfAIgwABAfAAAAABAfsJPQABAfsIgwABAfsAAAABAj4AAAABAWIG4AABAWL9TwABAewIUAABAewAAAABAdoIUAABAfgAAAABARwDcAABAaoIUAABAYwAAAABAsUIUAABAsUAAAABAdgIUAABAdgAAAABAbYIUAABAbYAAAABAWIIUAABAWIAAAABAWIDcAABAeUIKAABAtwF3AABAtIAAAABAQ0G7wABAdUIBQABAdUHugABAdH9ggABAdUHuQABAdUHTAABBCcG7wABAtkG7wABAdkHfQABAdkHugABAdkHuQABAdkHSgABAdkHTAABAdkIBQABAdkHUAABAdkF3AABAZAG7wABAe8F3AABAe8HfQABAe8HuQABAfAIjQABAe8HTAABAQ8G7wABAQ8IzAABAUIGYQABAQ0F3AABAQ0HfQABAQ0HuQABAQ0HSgABAQ0IBQABAQ0HUAABAQ0HTAABAQ0HZwABASoHTAABASoF3AABASoHuQABASr+7wABAeEAAAABAeEG7wABAeH9TwABAQoJGAABAQr9TwABAQoG7wABAQoAAAABATMG7wABATMAAAABATMDeAABAvAF3AABAf4IBQABAf4HugABAf4F3AABAf79TwABAf4HZwABAf4AAAABAeUF3AABAeUHfQABAeUHuQABAeUHSgABAeUIBQABAeUHUAABAbgF3AABAeUHZwABAtYF3AABAtYAAAABAfMF3AABAfQF3AABAfQAAAABAfEF3AABAfEAAAABAXEIBQABAXEHugABAXEF3AABARL9TwABAa8IBQABAa8HugABAav9ggABAa8HuQABAa8F3AABAa/9TwABAgQF3AABAgQAAAABAukG9wABAfkHfQABAfkHuQABAfkHSgABAfkIBQABAfkHUAABAQoD"
		"eAABAe8IBQABAe/9eQABAuAAAAABAdkIOQABAdkHfwABAdkAAAABAh8AAAABAQ0IOQABAQ0HfwABAQ0AAAABAS0AAAABAeUIOQABAeUHfwABAeUAAAABA2kACgABAeUC7gABAXEIOQABAXEHfwABARIAAAABAfkIOQABAfkHfwABASoG4AABAXv9TwABAQ0IXwABAtkIXwABAqAGYQABAZAIXwABAUoAAAABAvAHTAABAvAAAAABAfMHTAABAfMAAAABAa8HTAABAa8AAAABASoIUAABAXsAAAABAT8C7gABAfkF3AABAfkIKAABAfkHZwABAfkAAAABAwUAAAABAaoF3AABAaoAAAABAnUF3AABAnUHuQABAnUHSgABAnUIBQABAnUAAAABAaQF3AABAaQAAAABAa4F3AABAa4HuQABAa4HSgABAa4IBQABAa4AAAABAW4F3AABAW4IBQABAW4HugABAW4HTAABAW4AAAABAW4C7gABAgMG4AABAgMAAAABAdUF3AABAdUAAAABAa8F8gABAa8AFgABAbcG4AABAbcAAAAGABAAAQAKAAAAAQAMAAwAAQAUACoAAQACAasBrAACAAAACgAAABAAAQC7AAAAAQDKAAAAAgAGAAwAAQC7/U8AAQDG/YIABgAQAAEACgABAAEADAAMAAEAHACeAAIAAgGcAaAAAAGiAaoABQAOAAAAOgAAAEAAAABGAAAATAAAAFIAAABYAAAAWAAAAHYAAABeAAAAZAAAAGoAAABwAAAAdgAAAHwAAQGxBdwAAQC4BdwAAQEEBdwAAQDHBdwAAQFpBdwAAQGGBdwAAQEbBdwAAQGBBdwAAQFIBdwAAQHhBdwAAQFMBdwAAQC6BdwADgAeACQAKgAwADYAPABCAEgATgBUAFoAYABmAGwAAQGxB0oAAQC4B0wAAQEECAUAAQDHCAUAAQFpCDkAAQGGB7kAAQGGB7oAAQFMB30AAQEbCCgAAQGBB2cAAQFIB1AAAQHhCDkAAQFMB38AAQC7CI0AAAABAAAACgB4ANoAAkRGTFQADmxhdG4AEgAaAAAAFgADQ0FUIAAmTU9MIAA4Uk9NIABKAAD//wAFAAAAAQACAAMABwAA//8ABgAAAAEAAgADAAQABwAA//8ABgAAAAEAAgADAAUABwAA//8ABgAAAAEAAgADAAYABwAIYWFsdAAyY2NtcAA4ZnJhYwA+bGlnYQBEbG9jbABKbG9jbABQbG9jbABWb3JkbgBcAAAAAQAAAAAAAQABAAAAAQAJAAAAAQAMAAAAAQAGAAAAAQAFAAAAAQAEAAAAAQAKAA0AHABGAKoAqgC+AL4A1AEWATYBVgGSAdoB/AABAAAAAQAIAAIAEgAGATEBMgBcATEBMgD0AAEABgABAEUAWgCXAN0A8gAGAAAAAQAIAAIAagAQABQAHAACAAAAOAACAAAAAQDLAAEAAQACAAQBnAGgAAEBogGnAAEBqgGqAAEBrAGuAAIAAgAGABQAAAABAAEAAQABAAAAAgAAAAEAAgACAAEAAQAAAAMAAQAAAAEACAABAAYAAQABAAEAywABAAAAAQAIAAEABgACAAEAAgBaAPIABgAAAAEACAABAAoAAgASACYAAQACADkA0QABAAQAAAACAVIAAQA5AAEAAAAIAAEABAAAAAIBUgABANEAAQAAAAcABAAAAAEACAABABIAAQAIAAEABADVAAIBUgABAAEA0QAEAAAAAQAIAAEAEgABAAgAAQAEAD0AAgFSAAEAAQA5AAQAAAABAAgAAQAsAAIACgAgAAIABgAOAUUAAwFWATkBRAADAVYBNwABAAQBRgADAVYBOQABAAIBNgE4AAYAAAACAAoAJAADAAEALAABABIAAAABAAAACwABAAIAAQCXAAMAAQASAAEAHAAAAAEAAAALAAIAAQE1AT4AAAABAAIARQDdAAEAAAABAAgAAgAOAAQBMQEyATEBMgABAAQAAQBFAJcA3QAEAAgAAQAIAAEANgABAAgABQAMABQAHAAiACgBLQADALcAwAEuAAMAtwDRASwAAgC3AS8AAgDAATAAAgDRAAEAAQC3AAAAAQABAAgAAQAAABQAAQAAABwAAndnaHQBAAAAAAIAAQAAAAABBQK8AAAAAA==";

	constexpr auto TEXTURE_SHADER =
R"(#type vertex

#version 450 core

layout (location = 0) in vec3 a_Positions;
layout (location = 1) in vec4 a_Colors;
layout (location = 2) in vec2 a_TexCoords;
layout (location = 3) in float a_TexIndex;
layout (location = 4) in float a_Layer;
layout (location = 5) in int a_EntityID;

out vec2 o_TexCoords;
out vec4 o_VertexColor;
out float o_TexIndex;
out flat int o_EntityID;

uniform mat4 u_ViewProjection = mat4(1.0);
void main()
{
	o_TexCoords = a_TexCoords;
	o_VertexColor = a_Colors;
	o_TexIndex = a_TexIndex;
	o_EntityID = a_EntityID;
	gl_Position = u_ViewProjection * vec4(a_Positions.xy, a_Layer, 1.0);
}

#type fragment

#version 450 core

layout (location = 0) out vec4 FragColor;
layout (location = 1) out int PickingID;

in vec2 o_TexCoords;
in vec4 o_VertexColor;
in float o_TexIndex;
in flat int o_EntityID;

uniform sampler2D u_Textures[32];

void main()
{
	vec4 texColor = o_VertexColor;
	switch(int(o_TexIndex))
	{
		case 0: texColor *= texture(u_Textures[0], o_TexCoords); break;
		case 1: texColor *= texture(u_Textures[1], o_TexCoords); break;
		case 2: texColor *= texture(u_Textures[2], o_TexCoords); break;
		case 3: texColor *= texture(u_Textures[3], o_TexCoords); break;
		case 4: texColor *= texture(u_Textures[4], o_TexCoords); break;
		case 5: texColor *= texture(u_Textures[5], o_TexCoords); break;
		case 6: texColor *= texture(u_Textures[6], o_TexCoords); break;
		case 7: texColor *= texture(u_Textures[7], o_TexCoords); break;
		case 8: texColor *= texture(u_Textures[8], o_TexCoords); break;
		case 9: texColor *= texture(u_Textures[9], o_TexCoords); break;
		case 10: texColor *= texture(u_Textures[10], o_TexCoords); break;
		case 11: texColor *= texture(u_Textures[11], o_TexCoords); break;
		case 12: texColor *= texture(u_Textures[12], o_TexCoords); break;
		case 13: texColor *= texture(u_Textures[13], o_TexCoords); break;
		case 14: texColor *= texture(u_Textures[14], o_TexCoords); break;
		case 15: texColor *= texture(u_Textures[15], o_TexCoords); break;
		case 16: texColor *= texture(u_Textures[16], o_TexCoords); break;
		case 17: texColor *= texture(u_Textures[17], o_TexCoords); break;
		case 18: texColor *= texture(u_Textures[18], o_TexCoords); break;
		case 19: texColor *= texture(u_Textures[19], o_TexCoords); break;
		case 20: texColor *= texture(u_Textures[20], o_TexCoords); break;
		case 21: texColor *= texture(u_Textures[21], o_TexCoords); break;
		case 22: texColor *= texture(u_Textures[22], o_TexCoords); break;
		case 23: texColor *= texture(u_Textures[23], o_TexCoords); break;
		case 24: texColor *= texture(u_Textures[24], o_TexCoords); break;
		case 25: texColor *= texture(u_Textures[25], o_TexCoords); break;
		case 26: texColor *= texture(u_Textures[26], o_TexCoords); break;
		case 27: texColor *= texture(u_Textures[27], o_TexCoords); break;
		case 28: texColor *= texture(u_Textures[28], o_TexCoords); break;
		case 29: texColor *= texture(u_Textures[29], o_TexCoords); break;
		case 30: texColor *= texture(u_Textures[30], o_TexCoords); break;
		case 31: texColor *= texture(u_Textures[31], o_TexCoords); break;
	}

	FragColor = texColor;
	PickingID = o_EntityID;
})";

	constexpr auto TEXT_SHADER =
R"(#type vertex

#version 450 core

layout (location = 0) in vec3 a_Positions;
layout (location = 1) in vec4 a_Colors;
layout (location = 2) in vec2 a_TexCoords;
layout (location = 3) in float a_TexIndex;
layout (location = 4) in float a_Layer;

out vec2 o_TexCoords;
out vec4 o_VertexColor;
out float o_TexIndex;

uniform mat4 u_ViewProjection = mat4(1.0);
void main()
{
	o_TexCoords = a_TexCoords;
	o_VertexColor = a_Colors;
	o_TexIndex = a_TexIndex;
	gl_Position = u_ViewProjection * vec4(a_Positions.xy, a_Layer, 1.0);
}

#type fragment

#version 450 core

layout (location = 0) out vec4 FragColor;
layout (location = 1) out int PickingID;

in vec2 o_TexCoords;
in vec4 o_VertexColor;
in float o_TexIndex;

uniform sampler2D u_Textures[32];

void main()
{
	vec4 texColor = o_VertexColor;
	switch(int(o_TexIndex))
	{
		case 0: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[0], o_TexCoords).r); break;
		case 1: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[1], o_TexCoords).r); break;
		case 2: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[2], o_TexCoords).r); break;
		case 3: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[3], o_TexCoords).r); break;
		case 4: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[4], o_TexCoords).r); break;
		case 5: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[5], o_TexCoords).r); break;
		case 6: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[6], o_TexCoords).r); break;
		case 7: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[7], o_TexCoords).r); break;
		case 8: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[8], o_TexCoords).r); break;
		case 9: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[9], o_TexCoords).r); break;
		case 10: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[10], o_TexCoords).r); break;
		case 11: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[11], o_TexCoords).r); break;
		case 12: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[12], o_TexCoords).r); break;
		case 13: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[13], o_TexCoords).r); break;
		case 14: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[14], o_TexCoords).r); break;
		case 15: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[15], o_TexCoords).r); break;
		case 16: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[16], o_TexCoords).r); break;
		case 17: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[17], o_TexCoords).r); break;
		case 18: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[18], o_TexCoords).r); break;
		case 19: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[19], o_TexCoords).r); break;
		case 20: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[20], o_TexCoords).r); break;
		case 21: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[21], o_TexCoords).r); break;
		case 22: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[22], o_TexCoords).r); break;
		case 23: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[23], o_TexCoords).r); break;
		case 24: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[24], o_TexCoords).r); break;
		case 25: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[25], o_TexCoords).r); break;
		case 26: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[26], o_TexCoords).r); break;
		case 27: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[27], o_TexCoords).r); break;
		case 28: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[28], o_TexCoords).r); break;
		case 29: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[29], o_TexCoords).r); break;
		case 30: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[30], o_TexCoords).r); break;
		case 31: texColor *= vec4(1.0, 1.0, 1.0, texture(u_Textures[31], o_TexCoords).r); break;
	}

	FragColor = texColor;
	PickingID = -1;
})";

	void Renderer2D::Init()
	{
		AssetsManager::PushShaderFromMemory("TextureShader", TEXTURE_SHADER);
		AssetsManager::PushShaderFromMemory("TextShader", TEXT_SHADER);
		m_Data.textureShader = AssetsManager::GetShader("TextureShader");
		m_Data.textShader = AssetsManager::GetShader("TextShader");

		std::array<int32_t, 32 /*max samplers*/> samplers{};
		std::iota(samplers.begin(), samplers.end(), 0);
		m_Data.textureShader->Bind();
		m_Data.textureShader->SetUniformIntArray("u_Textures", samplers.data(), 32);
		m_Data.textureShader->UnBind();

		m_Data.textShader->Bind();
		m_Data.textShader->SetUniformIntArray("u_Textures", samplers.data(), 32);
		m_Data.textShader->UnBind();

		uint32_t whiteTextureData = 0xffffffff;
		AssetsManager::PushTextureFromMemory("WhiteTexture", 1, 1, &whiteTextureData);
		AssetsManager::PushTextureFromMemoryBase64("CameraEditor", CAMERA_IMAGE_BASE_64);
		AssetsManager::PushTextureFromMemoryBase64("PivotEditor", PIVOT_IMAGE_BASE_64);

		s_PolygonsBatching = new Polygons;
		s_WirePolygonsBatching = new WirePolygons;

		AssetsManager::PushFontFromMemoryBase64("Default", DEFAULT_FONT_BASE_64, 48);
	}

	void Renderer2D::Shutdown()
	{
		delete s_PolygonsBatching;
		delete s_WirePolygonsBatching;
	}

	void Renderer2D::Begin(const glm::mat4& projection)
	{
		m_Data.textureShader->Bind();
		m_Data.textureShader->SetUniformMat4f("u_ViewProjection", projection);
		s_PolygonsBatching->Begin(projection);
	}

	void Renderer2D::Begin(const EditorCamera& editorCam)
	{
		m_Data.textureShader->Bind();
		m_Data.textureShader->SetUniformMat4f("u_ViewProjection", editorCam.GetViewProjectionMatrix());
		s_PolygonsBatching->Begin(editorCam.GetViewProjectionMatrix());
	}


	void Renderer2D::Begin(const Camera& camera, const TransformComponent& transform)
	{
		auto trasnformMatrix = glm::translate(glm::mat4(1.f), glm::vec3(transform.translation, 0.f)) *
			glm::toMat4(glm::quat(glm::vec3(0.f, 0.f, glm::radians(transform.rotation))));

		glm::mat4 viewProjection = camera.GetProjection() * glm::inverse(trasnformMatrix);

		m_Data.textureShader->Bind();
		m_Data.textureShader->SetUniformMat4f("u_ViewProjection", viewProjection);
		s_PolygonsBatching->Begin(viewProjection);
	}

	void Renderer2D::BeginWire(const EditorCamera& editorCam)
	{
		m_Data.textureShader->Bind();
		m_Data.textureShader->SetUniformMat4f("u_ViewProjection", editorCam.GetViewProjectionMatrix());

		s_WirePolygonsBatching->Begin(editorCam.GetViewProjectionMatrix());
	}

	void Renderer2D::BeginWire(const Camera& camera, const TransformComponent& transform)
	{
		auto trasnformMatrix = glm::translate(glm::mat4(1.f), glm::vec3(transform.translation, 0.f)) *
			glm::toMat4(glm::quat(glm::vec3(0.f, 0.f, glm::radians(transform.rotation))));

		glm::mat4 viewProjection = camera.GetProjection() * glm::inverse(trasnformMatrix);

		m_Data.textureShader->Bind();
		m_Data.textureShader->SetUniformMat4f("u_ViewProjection", viewProjection);

		s_WirePolygonsBatching->Begin(viewProjection);
	}

	void Renderer2D::BeginText(const EditorCamera& editorCam)
	{
		m_Data.textShader->Bind();
		m_Data.textShader->SetUniformMat4f("u_ViewProjection", editorCam.GetViewProjectionMatrix());

		s_PolygonsBatching->Begin(editorCam.GetViewProjectionMatrix());
	}

	void Renderer2D::BeginText(const Camera& camera, const TransformComponent& transform)
	{
		auto trasnformMatrix = glm::translate(glm::mat4(1.f), glm::vec3(transform.translation, 0.f)) *
			glm::toMat4(glm::quat(glm::vec3(0.f, 0.f, glm::radians(transform.rotation))));

		glm::mat4 viewProjection = camera.GetProjection() * glm::inverse(trasnformMatrix);

		m_Data.textShader->Bind();
		m_Data.textShader->SetUniformMat4f("u_ViewProjection", viewProjection);

		s_PolygonsBatching->Begin(viewProjection);
	}

	void Renderer2D::End()
	{
		s_PolygonsBatching->Flush();
		//m_Data.textureShader->UnBind();
	}

	void Renderer2D::EndWire()
	{
		s_WirePolygonsBatching->Flush();
		//m_Data.textureShader->UnBind();
	}

	void Renderer2D::EndText()
	{
		s_PolygonsBatching->Flush();
		//m_Data.textShader->UnBind();
	}

	void Renderer2D::DrawQuad(const glm::vec2& position, const glm::vec2& size, const Color& color, int ID)
	{
		glm::mat4 transform = glm::translate(glm::mat4(1.0f), { position.x, position.y, 0.f })
			* glm::scale(glm::mat4(1.0f), { size.x, size.y, 1.0f });
		s_PolygonsBatching->DrawQuad(transform, color, ID);
	}

	void Renderer2D::DrawQuad(const glm::vec2& position, const glm::vec2& size, const std::shared_ptr<Texture2D>& texture, const Color& color, int layer, int ID)
	{
		glm::mat4 transform = glm::translate(glm::mat4(1.0f), { position.x, position.y, 0.f })
			* glm::scale(glm::mat4(1.0f), { size.x, size.y, 1.0f });

		s_PolygonsBatching->DrawQuad(transform, texture, color, layer, ID);
	}

	void Renderer2D::DrawSprite(SpriteComponent* sprite, TransformComponent* transform, int ID)
	{
		const auto& texture = AssetsManager::GetTexture(sprite->texture);
		if (texture.get() != nullptr)
		{
			s_PolygonsBatching->DrawQuad(transform->GetTransform(), texture, sprite->color, sprite->layer, ID);
		}
		else
		{
			sprite->size = { transform->scale.x, transform->scale.y };
			s_PolygonsBatching->DrawQuad(transform->GetTransform(), sprite->color, sprite->layer, ID);
		}
	}

	//void Renderer2D::DrawSprite(SpriteComponent* sprite, glm::mat4& transform, int ID)
	//{
	//	s_PolygonsBatching->DrawQuad(transform, sprite->color, ID);
	//}

	void Renderer2D::DrawPolygon(std::vector<glm::vec2>& vertices, const glm::vec2& position, const glm::vec2& size, const Color& color, int layer, int ID)
	{
		glm::mat4 transform = glm::translate(glm::mat4(1.0f), { position.x, position.y, 0.f })
			* glm::scale(glm::mat4(1.0f), { size.x, size.y, 1.0f });
		s_PolygonsBatching->DrawPolygon(vertices, transform, color, layer, ID);
	}

	void Renderer2D::DrawPolygon(std::vector<glm::vec2>& vertices, const glm::mat4& transform, const Color& color, int layer, int ID)
	{
		s_PolygonsBatching->DrawPolygon(vertices, transform, color, layer, ID);
	}

	void Renderer2D::DrawRectTriangle(const glm::vec2& position, const glm::vec2& size, const Color& color)
	{
		glm::mat4 transform = glm::translate(glm::mat4(1.0f), { position.x, position.y, 0.f })
			* glm::scale(glm::mat4(1.0f), { size.x, size.y, 1.0f });
		s_PolygonsBatching->DrawRectTriangle(transform, color);
	}

	void Renderer2D::DrawQuad(const glm::mat4& transform, const Color& color)
	{
		s_PolygonsBatching->DrawQuad(transform, color);
	}

	void Renderer2D::DrawQuad(const glm::mat4& transform, const std::shared_ptr<Texture2D>& texture, const Color& color)
	{
		s_PolygonsBatching->DrawQuad(transform, texture, color);
	}

	void Renderer2D::DrawCircle(const glm::mat4& transform, const Color& color, int layer, int ID)
	{
		s_PolygonsBatching->DrawCircle(transform, color, layer, ID);
	}

	void Renderer2D::DrawCircle(const glm::vec2& position, const glm::vec2& size, const Color& color, int layer, int ID)
	{
		glm::mat4 transform = glm::translate(glm::mat4(1.0f), { position.x, position.y, 0.f })
			* glm::scale(glm::mat4(1.0f), { size.x, size.y, 1.0f });
		s_PolygonsBatching->DrawCircle(transform, color, layer, ID);
	}

	void Renderer2D::DrawTriangle(const glm::vec2& position, const glm::vec2& size, const Color& color)
	{

		glm::mat4 transform = glm::translate(glm::mat4(1.0f), { position.x, position.y, 0.f })
			* glm::scale(glm::mat4(1.0f), { size.x, size.y, 1.0f });
		s_PolygonsBatching->DrawTriangle(transform, color);
	}

	void Renderer2D::DrawWiredPolygon(std::vector<glm::vec2>& vertices, const glm::vec2& position, const glm::vec2& size, const Color& color)
	{
		glm::mat4 transform = glm::translate(glm::mat4(1.0f), { position.x, position.y, 0.f })
			* glm::scale(glm::mat4(1.0f), { size.x, size.y, 1.0f });
		s_WirePolygonsBatching->Draw(vertices, transform, color);
	}

	void Renderer2D::DrawWiredQuad(const glm::vec2& position, const glm::vec2& size, const Color& color, int layer)
	{

		glm::mat4 transform = glm::translate(glm::mat4(1.0f), { position.x, position.y, 0.f })
			* glm::scale(glm::mat4(1.0f), { size.x, size.y, 1.0f });
		s_WirePolygonsBatching->DrawQuad(transform, color, layer);
	}

	void Renderer2D::DrawWiredQuad(const glm::mat4& transform, const Color& color, int layer)
	{
		s_WirePolygonsBatching->DrawQuad(transform, color, layer);
	}

	void Renderer2D::DrawLine(const std::pair<glm::vec2, glm::vec2>& positions, const Color& color, int layer)
	{
		s_WirePolygonsBatching->DrawLine(positions, color, layer);
	}

	void Renderer2D::DrawText_(TextComponent* textComponent)
	{
		//const auto &chars = textComponent->characters.GetCharactersMap();
		const auto &characters = AssetsManager::GetFont(textComponent->font);
		const auto& charMap = characters->GetCharactersMap();
		auto posCopy = textComponent->pos;
		posCopy.y -= characters->GetMaxBearing().y;

		for (auto c: textComponent->text)
		{
			Character ch = charMap.at(c);
			if (c != '\n')
			{

				float xpos = posCopy.x + ch.bearing.x * textComponent->scale.x;
				float ypos = posCopy.y - (ch.size.y - ch.bearing.y) * textComponent->scale.y;

				float w = ch.size.x * textComponent->scale.x;
				float h = ch.size.y * textComponent->scale.y;

				glm::vec4 vertices[6] = {
					{ xpos,     ypos + h,	0.0f, 0.0f },
					{ xpos,     ypos,		0.0f, 1.0f },
					{ xpos + w, ypos,		1.0f, 1.0f },

					{ xpos,     ypos + h,	0.0f, 0.0f },
					{ xpos + w, ypos,		1.0f, 1.0f },
					{ xpos + w, ypos + h,	1.0f, 0.0f }
				};

				glm::vec2 uv[6] = {
					{ ch.tx, 0.0f },
					{ ch.tx, 1.0f },
					{ ch.tx + (ch.size.x / (float)characters->GetAtlatsWidth()), 1.0f },
					{ ch.tx, 0.0f },
					{ ch.tx + (ch.size.x / (float)characters->GetAtlatsWidth()), 1.0f },
					{ ch.tx + (ch.size.x / (float)characters->GetAtlatsWidth()), 0.0f },
				};

				s_PolygonsBatching->DrawQuad(vertices, uv, characters->GetTextAtlats(), textComponent->color, textComponent->layer, -1);
				posCopy.x += (ch.advance >> 6) * textComponent->scale.x;
			}
			else
			{
				posCopy.y -= characters->GetMaxBearing().y * textComponent->scale.y;
				posCopy.x = textComponent->pos.x;
			}
		}
	}
}
