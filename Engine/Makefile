# Alternative GNU Make project makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

.PHONY: clean prebuild

SHELLTYPE := posix
ifeq (.exe,$(findstring .exe,$(ComSpec)))
	SHELLTYPE := msdos
endif

# Configurations
# #############################################

RESCOMP = windres
INCLUDES += -Isrc -Ivendor/spdlog/include -Ivendor/GLFW/include -Ivendor/Glad/include -Ivendor/imgui -Ivendor/glm -Ivendor/Portable_File_Dialogs -Ivendor/ImGuiColorTextEdit -Ivendor/stb_image -Ivendor/yaml-cpp/include -Ivendor/pybind11 -IC:/python/include
FORCE_INCLUDE +=
ALL_CPPFLAGS += $(CPPFLAGS) -MMD -MP $(DEFINES) $(INCLUDES)
ALL_RESFLAGS += $(RESFLAGS) $(DEFINES) $(INCLUDES)
LINKCMD = $(AR) -rcs "$@" $(OBJECTS)
define PREBUILDCMDS
endef
define PRELINKCMDS
endef
define POSTBUILDCMDS
endef

ifeq ($(config),debug)
TARGETDIR = ../bin/Debug-windows-x86_64/Engine
TARGET = $(TARGETDIR)/Engine.lib
OBJDIR = ../bin-int/Debug-windows-x86_64/Engine
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DGLFW_INCLUDE_NONE -DGLM_ENABLE_EXPERIMENTAL -DRYM_DEBUG
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -g
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -g -std=c++17
LIBS += vendor/GLFW/bin/Debug-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Debug-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Debug-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Debug-windows-x86_64/yaml-cpp/yaml-cpp.lib -lpython3.lib -lopengl32.lib
LDDEPS += vendor/GLFW/bin/Debug-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Debug-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Debug-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Debug-windows-x86_64/yaml-cpp/yaml-cpp.lib
ALL_LDFLAGS += $(LDFLAGS) -LC:/python/libs -L/usr/lib64 -m64

else ifeq ($(config),release)
TARGETDIR = ../bin/Release-windows-x86_64/Engine
TARGET = $(TARGETDIR)/Engine.lib
OBJDIR = ../bin-int/Release-windows-x86_64/Engine
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DGLFW_INCLUDE_NONE -DGLM_ENABLE_EXPERIMENTAL -DRYM_RELEASE
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += vendor/GLFW/bin/Release-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Release-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Release-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Release-windows-x86_64/yaml-cpp/yaml-cpp.lib -lpython3.lib -lopengl32.lib
LDDEPS += vendor/GLFW/bin/Release-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Release-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Release-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Release-windows-x86_64/yaml-cpp/yaml-cpp.lib
ALL_LDFLAGS += $(LDFLAGS) -LC:/python/libs -L/usr/lib64 -m64 -s

else ifeq ($(config),dist)
TARGETDIR = ../bin/Dist-windows-x86_64/Engine
TARGET = $(TARGETDIR)/Engine.lib
OBJDIR = ../bin-int/Dist-windows-x86_64/Engine
DEFINES += -D_CRT_SECURE_NO_WARNINGS -DGLFW_INCLUDE_NONE -DGLM_ENABLE_EXPERIMENTAL -DRYM_DIST
ALL_CFLAGS += $(CFLAGS) $(ALL_CPPFLAGS) -m64 -O2
ALL_CXXFLAGS += $(CXXFLAGS) $(ALL_CPPFLAGS) -m64 -O2 -std=c++17
LIBS += vendor/GLFW/bin/Dist-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Dist-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Dist-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Dist-windows-x86_64/yaml-cpp/yaml-cpp.lib -lpython3.lib -lopengl32.lib
LDDEPS += vendor/GLFW/bin/Dist-windows-x86_64/GLFW/GLFW.lib vendor/Glad/bin/Dist-windows-x86_64/Glad/Glad.lib vendor/imgui/bin/Dist-windows-x86_64/ImGui/ImGui.lib vendor/yaml-cpp/bin/Dist-windows-x86_64/yaml-cpp/yaml-cpp.lib
ALL_LDFLAGS += $(LDFLAGS) -LC:/python/libs -L/usr/lib64 -m64 -s

endif

# Per File Configurations
# #############################################


# File sets
# #############################################

GENERATED :=
OBJECTS :=

GENERATED += $(OBJDIR)/App.o
GENERATED += $(OBJDIR)/AssetsManager.o
GENERATED += $(OBJDIR)/BatchRendering.o
GENERATED += $(OBJDIR)/Buffer.o
GENERATED += $(OBJDIR)/Camera.o
GENERATED += $(OBJDIR)/Color.o
GENERATED += $(OBJDIR)/Components.o
GENERATED += $(OBJDIR)/DynamicGrid.o
GENERATED += $(OBJDIR)/Event.o
GENERATED += $(OBJDIR)/FrameBuffer.o
GENERATED += $(OBJDIR)/ImGuiBuild.o
GENERATED += $(OBJDIR)/ImGuiLayer.o
GENERATED += $(OBJDIR)/Input.o
GENERATED += $(OBJDIR)/Layer.o
GENERATED += $(OBJDIR)/Log.o
GENERATED += $(OBJDIR)/RandomNumbers.o
GENERATED += $(OBJDIR)/Renderer.o
GENERATED += $(OBJDIR)/Renderer2D.o
GENERATED += $(OBJDIR)/Scene.o
GENERATED += $(OBJDIR)/SceneSerializer.o
GENERATED += $(OBJDIR)/ShaderProgram.o
GENERATED += $(OBJDIR)/TextEditor.o
GENERATED += $(OBJDIR)/Texture.o
GENERATED += $(OBJDIR)/Triangulate.o
GENERATED += $(OBJDIR)/VertexArray.o
GENERATED += $(OBJDIR)/Window.o
GENERATED += $(OBJDIR)/rympch.o
GENERATED += $(OBJDIR)/stb_image.o
OBJECTS += $(OBJDIR)/App.o
OBJECTS += $(OBJDIR)/AssetsManager.o
OBJECTS += $(OBJDIR)/BatchRendering.o
OBJECTS += $(OBJDIR)/Buffer.o
OBJECTS += $(OBJDIR)/Camera.o
OBJECTS += $(OBJDIR)/Color.o
OBJECTS += $(OBJDIR)/Components.o
OBJECTS += $(OBJDIR)/DynamicGrid.o
OBJECTS += $(OBJDIR)/Event.o
OBJECTS += $(OBJDIR)/FrameBuffer.o
OBJECTS += $(OBJDIR)/ImGuiBuild.o
OBJECTS += $(OBJDIR)/ImGuiLayer.o
OBJECTS += $(OBJDIR)/Input.o
OBJECTS += $(OBJDIR)/Layer.o
OBJECTS += $(OBJDIR)/Log.o
OBJECTS += $(OBJDIR)/RandomNumbers.o
OBJECTS += $(OBJDIR)/Renderer.o
OBJECTS += $(OBJDIR)/Renderer2D.o
OBJECTS += $(OBJDIR)/Scene.o
OBJECTS += $(OBJDIR)/SceneSerializer.o
OBJECTS += $(OBJDIR)/ShaderProgram.o
OBJECTS += $(OBJDIR)/TextEditor.o
OBJECTS += $(OBJDIR)/Texture.o
OBJECTS += $(OBJDIR)/Triangulate.o
OBJECTS += $(OBJDIR)/VertexArray.o
OBJECTS += $(OBJDIR)/Window.o
OBJECTS += $(OBJDIR)/rympch.o
OBJECTS += $(OBJDIR)/stb_image.o

# Rules
# #############################################

all: $(TARGET)
	@:

$(TARGET): $(GENERATED) $(OBJECTS) $(LDDEPS) | $(TARGETDIR)
	$(PRELINKCMDS)
	@echo Linking Engine
	$(SILENT) $(LINKCMD)
	$(POSTBUILDCMDS)

$(TARGETDIR):
	@echo Creating $(TARGETDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(TARGETDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(TARGETDIR))
endif

$(OBJDIR):
	@echo Creating $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) mkdir -p $(OBJDIR)
else
	$(SILENT) mkdir $(subst /,\\,$(OBJDIR))
endif

clean:
	@echo Cleaning Engine
ifeq (posix,$(SHELLTYPE))
	$(SILENT) rm -f  $(TARGET)
	$(SILENT) rm -rf $(GENERATED)
	$(SILENT) rm -rf $(OBJDIR)
else
	$(SILENT) if exist $(subst /,\\,$(TARGET)) del $(subst /,\\,$(TARGET))
	$(SILENT) if exist $(subst /,\\,$(GENERATED)) rmdir /s /q $(subst /,\\,$(GENERATED))
	$(SILENT) if exist $(subst /,\\,$(OBJDIR)) rmdir /s /q $(subst /,\\,$(OBJDIR))
endif

prebuild: | $(OBJDIR)
	$(PREBUILDCMDS)

ifneq (,$(PCH))
$(OBJECTS): $(GCH) | $(PCH_PLACEHOLDER)
$(GCH): $(PCH) | prebuild
	@echo $(notdir $<)
	$(SILENT) $(CXX) -x c++-header $(ALL_CXXFLAGS) -o "$@" -MF "$(@:%.gch=%.d)" -c "$<"
$(PCH_PLACEHOLDER): $(GCH) | $(OBJDIR)
ifeq (posix,$(SHELLTYPE))
	$(SILENT) touch "$@"
else
	$(SILENT) echo $null >> "$@"
endif
else
$(OBJECTS): | prebuild
endif


# File Rules
# #############################################

$(OBJDIR)/App.o: src/RoraymaEngine/Core/App.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiBuild.o: src/RoraymaEngine/Core/ImGui/ImGuiBuild.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ImGuiLayer.o: src/RoraymaEngine/Core/ImGui/ImGuiLayer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Input.o: src/RoraymaEngine/Core/Input.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Layer.o: src/RoraymaEngine/Core/Layer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Log.o: src/RoraymaEngine/Core/Log.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/RandomNumbers.o: src/RoraymaEngine/Core/RandomNumbers.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/BatchRendering.o: src/RoraymaEngine/Renderer/BatchRendering.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Buffer.o: src/RoraymaEngine/Renderer/Buffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Camera.o: src/RoraymaEngine/Renderer/Camera.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Color.o: src/RoraymaEngine/Renderer/Color.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/DynamicGrid.o: src/RoraymaEngine/Renderer/DynamicGrid.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/FrameBuffer.o: src/RoraymaEngine/Renderer/FrameBuffer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer.o: src/RoraymaEngine/Renderer/Renderer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Renderer2D.o: src/RoraymaEngine/Renderer/Renderer2D.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/ShaderProgram.o: src/RoraymaEngine/Renderer/ShaderProgram.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Texture.o: src/RoraymaEngine/Renderer/Texture.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/VertexArray.o: src/RoraymaEngine/Renderer/VertexArray.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Window.o: src/RoraymaEngine/Renderer/Window.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/AssetsManager.o: src/RoraymaEngine/Scene/AssetsManager.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Components.o: src/RoraymaEngine/Scene/Components.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Scene.o: src/RoraymaEngine/Scene/Scene.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/SceneSerializer.o: src/RoraymaEngine/Scene/SceneSerializer.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Triangulate.o: src/RoraymaEngine/Utils/Triangulate.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/Event.o: src/RoraymaEngine/events/Event.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/rympch.o: src/rympch.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/TextEditor.o: vendor/ImGuiColorTextEdit/TextEditor.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"
$(OBJDIR)/stb_image.o: vendor/stb_image/stb_image.cpp
	@echo $(notdir $<)
	$(SILENT) $(CXX) $(ALL_CXXFLAGS) $(FORCE_INCLUDE) -o "$@" -MF "$(@:%.o=%.d)" -c "$<"

-include $(OBJECTS:%.o=%.d)
ifneq (,$(PCH))
  -include $(PCH_PLACEHOLDER).d
endif